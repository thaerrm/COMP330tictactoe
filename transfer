import java.util.*;

public class TicTacToe {
	
	static int array = 9;
	static String[] board = new String[array];
	static String p1 = "X";
	static String p2 = "O";
	static Scanner keyboard = new Scanner(System.in);
	static String currentPlayer;
	static String currentInput;
	static String Player1;
	static String Player2;
	static String winner;

public static void main(String [] args)
	{
//		int array = 9;
//		Scanner keyboard = new Scanner(System.in);
//		String[] board = new String[array];
//		String p1 = "X";
		
		for (int x = 0; x < array; x++){
			int count = x+1;
			board[x] = Integer.toString(count);
		}
		System.out.println("+---+---+---+");
		System.out.println("| " + board[0] + " | " + board[1] + " | " + board[2] + " |");
		System.out.println("+---+---+---+");
		System.out.println("| " + board[3] + " | " + board[4] + " | " + board[5] + " |");
		System.out.println("+---+---+---+");
		System.out.println("| " + board[6] + " | " + board[7] + " | " + board[8] + " |");
		System.out.println("+---+---+---+");
		
		player1Move();
	}
	public static void player1Move(){
//		currentPlayer = (currentPlayer == p1) ? p2 : p1;
		for(int i =0; i<array; i++){
			int z = keyboard.nextInt();
			if (z > 0 && z<10 && board[z-1] != "O" && board[z-1] != "X"){
				currentInput = (currentInput == p1) ? p2 : p1;
				int count = z-1; // this should fill in the first spot and the last one :)
				board[count] = currentInput;
				System.out.println("+---+---+---+");
				System.out.println("| " + board[0] + " | " + board[1] + " | " + board[2] + " |");
				System.out.println("+---+---+---+");
				System.out.println("| " + board[3] + " | " + board[4] + " | " + board[5] + " |");
				System.out.println("+---+---+---+");
				System.out.println("| " + board[6] + " | " + board[7] + " | " + board[8] + " |");
				System.out.println("+---+---+---+");
			}
			else{
				System.out.println("invalid move");
				player1Move();
			}
			winConditions();
		}
	}
	
	public static void playerChange(){
		currentPlayer = (currentPlayer == p1) ? p2 : p1;
	}
	public static void winnerCheck(){
		while(winner == null){
			
			for (int x = 0; x < array; x++){
				int count = x+1;
				board[x] = Integer.toString(count);
			}
			System.out.println("+---+---+---+");
			System.out.println("| " + board[0] + " | " + board[1] + " | " + board[2] + " |");
			System.out.println("+---+---+---+");
			System.out.println("| " + board[3] + " | " + board[4] + " | " + board[5] + " |");
			System.out.println("+---+---+---+");
			System.out.println("| " + board[6] + " | " + board[7] + " | " + board[8] + " |");
			System.out.println("+---+---+---+");
			
			player1Move();
			winConditions();
		}
	}
	public static void winConditions(){
		int num;
		String pInputs = null;
		for (num = 1; num<8; num++){
			switch(num){
			case 1:
				pInputs = board[0]+board[1]+board[2];
				break;
			case 2:
				pInputs = board[3]+board[4]+board[5];
				break;
			case 3:
				pInputs = board[6]+board[7]+board[8];
				break;
			case 4:
				pInputs = board[0]+board[3]+board[6];
				break;
			case 5:
				pInputs = board[1]+board[4]+board[7];
				break;
			case 6:
				pInputs = board[2]+board[5]+board[8];
				break;
			case 7:
				pInputs = board[0]+board[4]+board[8];
				break;
			case 8:
				pInputs = board[2]+board[4]+board[6];
				break;
			}
			if (pInputs.equalsIgnoreCase(p1+p1+p1)){
				System.out.println("p1 wins");
			}
			else if (pInputs.equalsIgnoreCase(p2+p2+p2)){
				System.out.println("p2 wins");
			}
		}
	}
}

